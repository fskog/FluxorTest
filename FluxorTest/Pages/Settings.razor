@page "/settings"
@using Blazor.Fluxor
@using Store.Category
@inject IState<CategoryState> CategoryState
@inject IDispatcher Dispatcher
@inherits Blazor.Fluxor.Components.FluxorComponent

<h1>Settings</h1>
<p>Change your preferences</p>


<h3>Category</h3>
<p>Manage your cateogries.</p>

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="New category"
           aria-label="New category..." aria-describedby="basic-addon2"
           @bind-value=categoryInput @bind-value:event="oninput">
    <div class="input-group-append">
        <button class="btn btn-outline-secondary" type="button" @onclick="AddCategory">
            Add new
        </button>
    </div>
</div>


<ul class="list-group">
    @foreach (var category in CategoryState.Value.Categories)
    {
        <li class="list-group-item">
            @category.Name
            <a href="#" @onclick:preventDefault @onclick=@(() =>RemoveCategory(category.SystemId)) class="badge badge-pill badge-danger">Remove</a>
        </li>

    }
</ul>

@code {
    string categoryInput = "";

    private void RemoveCategory(Guid systemId)
    {
        Dispatcher.Dispatch(new RemoveCategoryAction(systemId));
    }

    private void AddCategory()
    {
        if (!string.IsNullOrWhiteSpace(categoryInput))
        {
            Dispatcher.Dispatch(new AddCategoryAction(categoryInput));
            categoryInput = "";
        }
    }
}
